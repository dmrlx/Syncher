Привет, команды

Сегодня мы получили запро от компании GGG. У этой компании много Linux машин, которые нуждаются в синхронизации друг с другом. У компании нет облачного хранилища или системы управления на базе кластеров, так что нам нужно написать собственную утилиту для машин.

Пожалуйста, напишите обёртку для стандартной Linux-утилиты "rsync", которая обеспечит простой способ копировать файлы с локальной на удалённую машину.

Компания GGG выкатила следующие требования к проекту:
1. Скрипт должен быть единым файлом, но в будущем мы хотим отмасштабировать его в Python пакет (множество файлов с разной функциональностью) — пожалуйста, учтите это.
2. Проект должен быть многоразовым. Он должен содержать интерфейс (функцию или функции) которые позволят использовать его в других скриптах.
3. Должен поддерживать CLI — может быть запущен из bash с аргументами и ключами
4. Должен поддерживать ключи из rsync: -PavSzq, -progress, '-e ssh -P -i'
5. Должен поддерживать пароль из CLI (если предусмотрено): syncher.py –pass='No1LiveS4ever' file1.txt root:22@hostname:/
6. Валидные разделители между именем пользователя и хостом — запятая, точка, двоеточие.
7. Должен проверять существует ли путь на удалённом хосте и если нет, то создавать его.

Примеры:

syncer.py /usr root@host
# Скопирует директорию со всеми файлами и подпапками на удалённый хост.
# Will replicate a directory with all files and subdirs to remote host

syncer.py /usr/ myfile.txt root@host

# For /usr/ content and myfile.txt which located in user home directory will be replicated with the same path as original file

syncer.py /usr/wildcard* file3.avi root,22@hostname:/junk
Все файлы с именем содержащим "wildcard" и файл file3.avi будут скопированы на удалённый хост в папку /junk
# All the files with names matching 'wildcard' and file3.avi will be copied to remote host in folder '/junk'

Workflow:
Тимлиды определяют GitHub проект для хранения командной работы и отправляют мне ссылку.
Неопределённые требования и запросы пояснений так же отправляют тимлиды почтой.

Ожидаю вашу стратегию до 21:20 сегодня и ежедневные отчёты.


syncher.py -vsaAp /usr/wildcard* file3.avi root,22@hostname:/junk

